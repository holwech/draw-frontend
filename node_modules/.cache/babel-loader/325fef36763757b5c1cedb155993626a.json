{"remainingRequest":"/home/holwech/code/draw/example/draw/node_modules/babel-loader/lib/index.js!/home/holwech/code/draw/src/draw.js","dependencies":[{"path":"/home/holwech/code/draw/src/draw.js","mtime":1546797333130},{"path":"/home/holwech/code/draw/example/draw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/holwech/code/draw/example/draw/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nimport \"core-js/modules/es6.number.constructor\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SVGDraw =\n/** @class */\nfunction () {\n  function SVGDraw(svgID) {\n    var _this = this;\n\n    this.strokeWidth = '2';\n    this.svg.getElementsByTagName(svgID);\n    this.bufferSize = document.getElementById('cmbBufferSize').value;\n    this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    this.path.setAttribute('fill', 'none');\n    this.path.setAttribute('stroke', '#000');\n    this.path.setAttribute('stroke-width', this.strokeWidth);\n    this.pathStarted = false;\n    this.buffer = [];\n    this.rect = this.svg.getBoundingClientRect();\n    this.svg.addEventListener('mousedown', function (e) {\n      return _this.mouseDownDraw(e);\n    });\n    this.svg.addEventListener('mousemove', function (e) {\n      return _this.mouseMoveDraw(e);\n    });\n    this.svg.addEventListener('mouseup', function () {\n      return _this.mouseUpDraw();\n    });\n  }\n\n  SVGDraw.prototype.mouseDownDraw = function (e) {\n    this.pathStarted = true;\n    this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    this.path.setAttribute('fill', 'none');\n    this.path.setAttribute('stroke', '#000');\n    this.path.setAttribute('stroke-width', this.strokeWidth);\n    this.buffer = [];\n    var pt = this.getMousePosition(e);\n    this.appendToBuffer(pt);\n    this.strPath = 'M' + pt.x + ' ' + pt.y;\n    this.path.setAttribute('d', this.strPath);\n    this.svg.appendChild(this.path);\n  };\n\n  SVGDraw.prototype.getMousePosition = function (e) {\n    return {\n      x: e.pageX - this.rect.left,\n      y: e.pageY - this.rect.top\n    };\n  };\n\n  SVGDraw.prototype.appendToBuffer = function (pt) {\n    this.buffer.push(pt);\n\n    while (this.buffer.length > Number(this.bufferSize)) {\n      this.buffer.shift();\n    }\n  };\n\n  SVGDraw.prototype.mouseMoveDraw = function (e) {\n    if (this.pathStarted) {\n      this.appendToBuffer(this.getMousePosition(e));\n      this.updateSVGPath();\n    }\n  };\n\n  SVGDraw.prototype.getAveragePoint = function (offset) {\n    var len = this.buffer.length;\n\n    if (len % 2 === 1 || len >= Number(this.bufferSize)) {\n      var totalX = 0;\n      var totalY = 0;\n      var pt = {\n        x: 0,\n        y: 0\n      };\n      var count = 0;\n\n      for (var i = offset; i < len; i++) {\n        count++;\n        pt = this.buffer[i];\n        totalX += pt.x;\n        totalY += pt.y;\n      }\n\n      return {\n        x: totalX / count,\n        y: totalY / count\n      };\n    }\n\n    return null;\n  };\n\n  SVGDraw.prototype.updateSVGPath = function () {\n    var pt = this.getAveragePoint(0);\n\n    if (pt) {\n      this.strPath += ' L' + pt.x + ' ' + pt.y;\n      var tempPath = '';\n\n      for (var offset = 2; offset < this.buffer.length; offset += 2) {\n        pt = this.getAveragePoint(offset);\n        tempPath += ' L' + pt.x + ' ' + pt.y;\n      }\n\n      this.path.setAttribute('d', this.strPath + tempPath);\n    }\n  };\n\n  SVGDraw.prototype.mouseUpDraw = function () {\n    if (this.pathStarted) {\n      this.pathStarted = false;\n    }\n  };\n\n  return SVGDraw;\n}();\n\nexports.SVGDraw = SVGDraw;",{"version":3,"sources":["draw.ts"],"names":[],"mappings":";;;;;;;AAKA,IAAA,OAAA;AAAA;AAAA,YAAA;AAUE,WAAA,OAAA,CAAY,KAAZ,EAAyB;AAAzB,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,WAAL,GAAmB,GAAnB;AACA,SAAK,GAAL,CAAS,oBAAT,CAA8B,KAA9B;AACA,SAAK,UAAL,GAAmB,QAAQ,CAAC,cAAT,CAAwB,eAAxB,EAA8D,KAAjF;AACA,SAAK,IAAL,GAAY,QAAQ,CAAC,eAAT,CAAyB,4BAAzB,EAAuD,MAAvD,CAAZ;AACA,SAAK,IAAL,CAAU,YAAV,CAAuB,MAAvB,EAA+B,MAA/B;AACA,SAAK,IAAL,CAAU,YAAV,CAAuB,QAAvB,EAAiC,MAAjC;AACA,SAAK,IAAL,CAAU,YAAV,CAAuB,cAAvB,EAAuC,KAAK,WAA5C;AACA,SAAK,WAAL,GAAmB,KAAnB;AACA,SAAK,MAAL,GAAc,EAAd;AACA,SAAK,IAAL,GAAY,KAAK,GAAL,CAAS,qBAAT,EAAZ;AAEA,SAAK,GAAL,CAAS,gBAAT,CAA0B,WAA1B,EAAuC,UAAC,CAAD,EAAc;AAAK,aAAA,KAAI,CAAC,aAAL,CAAA,CAAA,CAAA;AAAqB,KAA/E;AACA,SAAK,GAAL,CAAS,gBAAT,CAA0B,WAA1B,EAAuC,UAAC,CAAD,EAAc;AAAK,aAAA,KAAI,CAAC,aAAL,CAAA,CAAA,CAAA;AAAqB,KAA/E;AACA,SAAK,GAAL,CAAS,gBAAT,CAA0B,SAA1B,EAAqC,YAAA;AAAM,aAAA,KAAI,CAAJ,WAAA,EAAA;AAAkB,KAA7D;AACD;;AAEO,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,GAAR,UAAsB,CAAtB,EAAmC;AACjC,SAAK,WAAL,GAAmB,IAAnB;AACA,SAAK,IAAL,GAAY,QAAQ,CAAC,eAAT,CAAyB,4BAAzB,EAAuD,MAAvD,CAAZ;AACA,SAAK,IAAL,CAAU,YAAV,CAAuB,MAAvB,EAA+B,MAA/B;AACA,SAAK,IAAL,CAAU,YAAV,CAAuB,QAAvB,EAAiC,MAAjC;AACA,SAAK,IAAL,CAAU,YAAV,CAAuB,cAAvB,EAAuC,KAAK,WAA5C;AACA,SAAK,MAAL,GAAc,EAAd;AACA,QAAM,EAAE,GAAU,KAAK,gBAAL,CAAsB,CAAtB,CAAlB;AACA,SAAK,cAAL,CAAoB,EAApB;AACA,SAAK,OAAL,GAAe,MAAM,EAAE,CAAC,CAAT,GAAa,GAAb,GAAmB,EAAE,CAAC,CAArC;AACA,SAAK,IAAL,CAAU,YAAV,CAAuB,GAAvB,EAA4B,KAAK,OAAjC;AACA,SAAK,GAAL,CAAS,WAAT,CAAqB,KAAK,IAA1B;AACD,GAZO;;AAcA,EAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,GAAR,UAAyB,CAAzB,EAAsC;AACpC,WAAO;AACL,MAAA,CAAC,EAAE,CAAC,CAAC,KAAF,GAAU,KAAK,IAAL,CAAU,IADlB;AAEL,MAAA,CAAC,EAAE,CAAC,CAAC,KAAF,GAAU,KAAK,IAAL,CAAU;AAFlB,KAAP;AAID,GALO;;AAOA,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,GAAR,UAAuB,EAAvB,EAAgC;AAC9B,SAAK,MAAL,CAAY,IAAZ,CAAiB,EAAjB;;AACA,WAAO,KAAK,MAAL,CAAY,MAAZ,GAAqB,MAAM,CAAC,KAAK,UAAN,CAAlC,EAAqD;AACnD,WAAK,MAAL,CAAY,KAAZ;AACD;AACF,GALO;;AAOA,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,GAAR,UAAsB,CAAtB,EAAmC;AACjC,QAAI,KAAK,WAAT,EAAsB;AACpB,WAAK,cAAL,CAAoB,KAAK,gBAAL,CAAsB,CAAtB,CAApB;AACA,WAAK,aAAL;AACD;AACF,GALO;;AAOA,EAAA,OAAA,CAAA,SAAA,CAAA,eAAA,GAAR,UAAwB,MAAxB,EAAsC;AACpC,QAAM,GAAG,GAAG,KAAK,MAAL,CAAY,MAAxB;;AACA,QAAI,GAAG,GAAG,CAAN,KAAY,CAAZ,IAAiB,GAAG,IAAI,MAAM,CAAC,KAAK,UAAN,CAAlC,EAAqD;AACnD,UAAI,MAAM,GAAG,CAAb;AACA,UAAI,MAAM,GAAG,CAAb;AACA,UAAI,EAAE,GAAU;AACd,QAAA,CAAC,EAAE,CADW;AAEd,QAAA,CAAC,EAAE;AAFW,OAAhB;AAIA,UAAI,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAI,CAAC,GAAG,MAAb,EAAqB,CAAC,GAAG,GAAzB,EAA8B,CAAC,EAA/B,EAAmC;AACjC,QAAA,KAAK;AACL,QAAA,EAAE,GAAG,KAAK,MAAL,CAAY,CAAZ,CAAL;AACA,QAAA,MAAM,IAAI,EAAE,CAAC,CAAb;AACA,QAAA,MAAM,IAAI,EAAE,CAAC,CAAb;AACD;;AACD,aAAO;AACL,QAAA,CAAC,EAAE,MAAM,GAAG,KADP;AAEL,QAAA,CAAC,EAAE,MAAM,GAAG;AAFP,OAAP;AAID;;AACD,WAAO,IAAP;AACD,GAtBO;;AAwBA,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,GAAR,YAAA;AACE,QAAI,EAAE,GAAiB,KAAK,eAAL,CAAqB,CAArB,CAAvB;;AACA,QAAI,EAAJ,EAAQ;AACN,WAAK,OAAL,IAAgB,OAAO,EAAG,CAAC,CAAX,GAAe,GAAf,GAAqB,EAAG,CAAC,CAAzC;AACA,UAAI,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAI,MAAM,GAAG,CAAlB,EAAqB,MAAM,GAAG,KAAK,MAAL,CAAY,MAA1C,EAAkD,MAAM,IAAI,CAA5D,EAA+D;AAC7D,QAAA,EAAE,GAAG,KAAK,eAAL,CAAqB,MAArB,CAAL;AACA,QAAA,QAAQ,IAAI,OAAO,EAAG,CAAC,CAAX,GAAe,GAAf,GAAqB,EAAG,CAAC,CAArC;AACD;;AACD,WAAK,IAAL,CAAU,YAAV,CAAuB,GAAvB,EAA4B,KAAK,OAAL,GAAe,QAA3C;AACD;AACF,GAXO;;AAaA,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,GAAR,YAAA;AACE,QAAI,KAAK,WAAT,EAAsB;AACpB,WAAK,WAAL,GAAmB,KAAnB;AACD;AACF,GAJO;;AAKV,SAAA,OAAA;AAAC,CAxGD,EAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SVGDraw = /** @class */ (function () {\n    function SVGDraw(svgID) {\n        var _this = this;\n        this.strokeWidth = '2';\n        this.svg.getElementsByTagName(svgID);\n        this.bufferSize = document.getElementById('cmbBufferSize').value;\n        this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        this.path.setAttribute('fill', 'none');\n        this.path.setAttribute('stroke', '#000');\n        this.path.setAttribute('stroke-width', this.strokeWidth);\n        this.pathStarted = false;\n        this.buffer = [];\n        this.rect = this.svg.getBoundingClientRect();\n        this.svg.addEventListener('mousedown', function (e) { return _this.mouseDownDraw(e); });\n        this.svg.addEventListener('mousemove', function (e) { return _this.mouseMoveDraw(e); });\n        this.svg.addEventListener('mouseup', function () { return _this.mouseUpDraw(); });\n    }\n    SVGDraw.prototype.mouseDownDraw = function (e) {\n        this.pathStarted = true;\n        this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        this.path.setAttribute('fill', 'none');\n        this.path.setAttribute('stroke', '#000');\n        this.path.setAttribute('stroke-width', this.strokeWidth);\n        this.buffer = [];\n        var pt = this.getMousePosition(e);\n        this.appendToBuffer(pt);\n        this.strPath = 'M' + pt.x + ' ' + pt.y;\n        this.path.setAttribute('d', this.strPath);\n        this.svg.appendChild(this.path);\n    };\n    SVGDraw.prototype.getMousePosition = function (e) {\n        return {\n            x: e.pageX - this.rect.left,\n            y: e.pageY - this.rect.top,\n        };\n    };\n    SVGDraw.prototype.appendToBuffer = function (pt) {\n        this.buffer.push(pt);\n        while (this.buffer.length > Number(this.bufferSize)) {\n            this.buffer.shift();\n        }\n    };\n    SVGDraw.prototype.mouseMoveDraw = function (e) {\n        if (this.pathStarted) {\n            this.appendToBuffer(this.getMousePosition(e));\n            this.updateSVGPath();\n        }\n    };\n    SVGDraw.prototype.getAveragePoint = function (offset) {\n        var len = this.buffer.length;\n        if (len % 2 === 1 || len >= Number(this.bufferSize)) {\n            var totalX = 0;\n            var totalY = 0;\n            var pt = {\n                x: 0,\n                y: 0,\n            };\n            var count = 0;\n            for (var i = offset; i < len; i++) {\n                count++;\n                pt = this.buffer[i];\n                totalX += pt.x;\n                totalY += pt.y;\n            }\n            return {\n                x: totalX / count,\n                y: totalY / count,\n            };\n        }\n        return null;\n    };\n    SVGDraw.prototype.updateSVGPath = function () {\n        var pt = this.getAveragePoint(0);\n        if (pt) {\n            this.strPath += ' L' + pt.x + ' ' + pt.y;\n            var tempPath = '';\n            for (var offset = 2; offset < this.buffer.length; offset += 2) {\n                pt = this.getAveragePoint(offset);\n                tempPath += ' L' + pt.x + ' ' + pt.y;\n            }\n            this.path.setAttribute('d', this.strPath + tempPath);\n        }\n    };\n    SVGDraw.prototype.mouseUpDraw = function () {\n        if (this.pathStarted) {\n            this.pathStarted = false;\n        }\n    };\n    return SVGDraw;\n}());\nexports.SVGDraw = SVGDraw;\n//# sourceMappingURL=draw.js.map"]}]}