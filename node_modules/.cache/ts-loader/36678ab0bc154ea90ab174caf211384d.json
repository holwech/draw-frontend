{"remainingRequest":"/home/holwech/code/draw/node_modules/babel-loader/lib/index.js!/home/holwech/code/draw/node_modules/ts-loader/index.js??ref--13-2!/home/holwech/code/draw/src/draw/recorder/RecordLog.ts","dependencies":[{"path":"/home/holwech/code/draw/src/draw/recorder/RecordLog.ts","mtime":1552817838972},{"path":"/home/holwech/code/draw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/ts-loader/index.js","mtime":1540965372000}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/holwech/code/draw/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/holwech/code/draw/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar RecordLog =\n/*#__PURE__*/\nfunction () {\n  function RecordLog() {\n    _classCallCheck(this, RecordLog);\n\n    this.numObj = -1;\n    this.log = [];\n  }\n\n  _createClass(RecordLog, [{\n    key: \"commit\",\n    value: function commit(event, time) {\n      this.log.push({\n        event: event,\n        time: time,\n        id: this.newID()\n      });\n    }\n  }, {\n    key: \"newID\",\n    value: function newID() {\n      this.numObj++;\n      return this.numObj;\n    }\n  }]);\n\n  return RecordLog;\n}();\n\nexport { RecordLog as default };",{"version":3,"sources":["/home/holwech/code/draw/src/draw/recorder/RecordLog.ts"],"names":[],"mappings":";;;IAEqB,S;;;AAArB,uBAAA;AAAA;;AACS,SAAA,MAAA,GAAiB,CAAC,CAAlB;AACA,SAAA,GAAA,GAAmB,EAAnB;AAcR;;;;2BAZe,K,EAAe,I,EAAY;AACvC,WAAK,GAAL,CAAS,IAAT,CAAc;AACZ,QAAA,KAAK,EAAL,KADY;AAEZ,QAAA,IAAI,EAAJ,IAFY;AAGZ,QAAA,EAAE,EAAE,KAAK,KAAL;AAHQ,OAAd;AAKD;;;4BAEY;AACX,WAAK,MAAL;AACA,aAAO,KAAK,MAAZ;AACD;;;;;;SAfkB,S","sourcesContent":["import { IEvent, EventType, ILogEvent, IStrokeProps, IViewBox, BoardState } from '../utils/boardInterfaces';\n\nexport default class RecordLog {\n  public numObj: number = -1;\n  public log: ILogEvent[] = [];\n\n  public commit(event: IEvent, time: number): void {\n    this.log.push({\n      event,\n      time,\n      id: this.newID(),\n    });\n  }\n\n  private newID(): number {\n    this.numObj++;\n    return this.numObj;\n  }\n}\n"],"sourceRoot":""}]}