{"remainingRequest":"/home/holwech/code/draw/node_modules/babel-loader/lib/index.js!/home/holwech/code/draw/node_modules/ts-loader/index.js??ref--13-2!/home/holwech/code/draw/src/draw/utils/boardInterfaces.ts","dependencies":[{"path":"/home/holwech/code/draw/src/draw/utils/boardInterfaces.ts","mtime":1552931256196},{"path":"/home/holwech/code/draw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/ts-loader/index.js","mtime":1540965372000}],"contextDependencies":[],"result":["export var EventType;\n\n(function (EventType) {\n  EventType[\"ONWHEEL\"] = \"ONWHEEL\";\n  EventType[\"POINTER_DOWN\"] = \"POINTER_DOWN\";\n  EventType[\"POINTER_MOVE\"] = \"POINTER_MOVE\";\n  EventType[\"POINTER_UP\"] = \"POINTER_UP\";\n  EventType[\"SET_STROKE_PROPS\"] = \"SET_STROKE_PROPS\";\n  EventType[\"CLEAR\"] = \"CLEAR\";\n  EventType[\"SET_STATE\"] = \"SET_STATE\";\n  EventType[\"SET_VIEWBOX\"] = \"SET_VIEWBOX\";\n})(EventType || (EventType = {}));\n\nexport var BoardState;\n\n(function (BoardState) {\n  BoardState[\"DRAW\"] = \"DRAW\";\n  BoardState[\"PAN\"] = \"PAN\";\n})(BoardState || (BoardState = {}));",{"version":3,"sources":["/home/holwech/code/draw/src/draw/utils/boardInterfaces.ts"],"names":[],"mappings":"AAuCA,OAAA,IAAY,SAAZ;;AAAA,CAAA,UAAY,SAAZ,EAAqB;AACnB,EAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,SAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,SAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,SAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,SAAA,CAAA,kBAAA,CAAA,GAAA,kBAAA;AACA,EAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,SAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACD,CATD,EAAY,SAAS,KAAT,SAAS,GAAA,EAAA,CAArB;;AAWA,OAAA,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;AACpB,EAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,UAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACD,CAHD,EAAY,UAAU,KAAV,UAAU,GAAA,EAAA,CAAtB","sourcesContent":["export interface IRecordPoint {\n  time: number;\n  x: number;\n  y: number;\n}\n\nexport interface IPoint {\n  x: number;\n  y: number;\n}\n\nexport interface IStrokeProps {\n  color: string;\n  width: number;\n  bufferSize: number;\n}\n\nexport interface IViewBox {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface IEvent {\n  eventType: EventType;\n  time?: number;\n  e?: MouseEvent | WheelEvent;\n  strokeProps?: IStrokeProps;\n  state?: BoardState;\n  viewBox?: IViewBox;\n}\n\nexport interface ILogEvent {\n  event: IEvent;\n  time: number;\n  id: number;\n}\n\nexport enum EventType {\n  ONWHEEL = 'ONWHEEL',\n  POINTER_DOWN = 'POINTER_DOWN',\n  POINTER_MOVE = 'POINTER_MOVE',\n  POINTER_UP = 'POINTER_UP',\n  SET_STROKE_PROPS = 'SET_STROKE_PROPS',\n  CLEAR = 'CLEAR',\n  SET_STATE = 'SET_STATE',\n  SET_VIEWBOX = 'SET_VIEWBOX',\n}\n\nexport enum BoardState {\n  DRAW = 'DRAW',\n  PAN = 'PAN',\n}\n"],"sourceRoot":""}]}