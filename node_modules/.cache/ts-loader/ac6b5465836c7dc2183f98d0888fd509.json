{"remainingRequest":"/home/holwech/code/draw/node_modules/babel-loader/lib/index.js!/home/holwech/code/draw/node_modules/ts-loader/index.js??ref--13-2!/home/holwech/code/draw/src/draw/AppController.ts","dependencies":[{"path":"/home/holwech/code/draw/src/draw/AppController.ts","mtime":1553625573567},{"path":"/home/holwech/code/draw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/ts-loader/index.js","mtime":1540965372000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.map\";\nimport _classCallCheck from \"/home/holwech/code/draw/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/holwech/code/draw/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventType } from './utils/boardInterfaces';\nimport { BoardController } from './board/BoardController';\nimport { PlayController } from './player/PlayController';\nimport { RecordController } from './recorder/RecordController';\nimport { EventController } from './event/EventController';\nimport { ActionType, AppStates } from './utils/appInterfaces';\nimport AppState from './AppState';\nexport var AppController =\n/*#__PURE__*/\nfunction () {\n  function AppController(svgID, strokeProps) {\n    _classCallCheck(this, AppController);\n\n    this.state = new AppState();\n    this.svg = document.getElementById(svgID);\n\n    if (!this.svg.getScreenCTM()) {\n      throw new Error('getScreenCTM is not defined');\n    }\n\n    var viewBox = {\n      x: 0,\n      y: 0,\n      width: 1200,\n      height: 800\n    };\n    var viewboxElem = this.svg.getAttributeNS(null, 'viewBox');\n\n    if (viewboxElem !== null) {\n      var arr = viewboxElem.split(' ').map(Number);\n      viewBox = {\n        x: arr[0],\n        y: arr[1],\n        width: arr[2],\n        height: arr[3]\n      };\n    } else {\n      throw new Error('The SVG element requires the view box attribute to be set.');\n    }\n\n    var initialState = [{\n      eventType: EventType.SET_STROKE_PROPS,\n      strokeProps: strokeProps\n    }, {\n      eventType: EventType.SET_VIEWBOX,\n      viewBox: viewBox\n    }];\n    this.board = new BoardController(this.svg, this, initialState);\n    this.recorder = new RecordController(this, initialState);\n    this.player = new PlayController(this, this.state.playState);\n    this.event = new EventController(this.svg, this);\n  }\n\n  _createClass(AppController, [{\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      console.log('EVENT: ' + event.eventType);\n\n      switch (this.state.state) {\n        case AppStates.UINIT:\n          console.log('App uninitialized');\n          break;\n\n        case AppStates.RECORDING:\n          event.time = this.state.timer.getTime();\n          this.board.execute(event);\n          this.recorder.record(event);\n          break;\n\n        case AppStates.PLAYING:\n          this.board.execute(event);\n          break;\n\n        default:\n          throw new Error('No case for appState ' + this.state.state);\n      }\n    }\n  }, {\n    key: \"dispatchAction\",\n    value: function dispatchAction(action) {\n      console.log('ACTION: ' + action.action);\n\n      switch (action.action) {\n        case ActionType.RECORD_START:\n          this.state.state = AppStates.RECORDING;\n          this.state.timer.start();\n          this.event.executeAction(action);\n          break;\n\n        case ActionType.RECORD_STOP:\n          this.state.state = AppStates.RECORDING;\n          this.state.timer.stop();\n          this.event.executeAction(action);\n          break;\n\n        case ActionType.RECORD_PAUSE:\n          this.state.state = AppStates.RECORDING;\n          this.state.timer.pause();\n          this.event.executeAction(action);\n          break;\n\n        case ActionType.PLAY_START:\n          if (this.state.state === AppStates.RECORDING || this.state.state === AppStates.UINIT) {\n            this.player.setEventLog(this.recorder.getEventLog());\n          }\n\n          this.state.state = AppStates.PLAYING;\n          this.player.play();\n          break;\n\n        case ActionType.PLAY_STOP:\n          this.player.stop();\n          this.state.state = AppStates.PLAYING;\n          break;\n\n        case ActionType.PLAY_PAUSE:\n          this.player.pause();\n          this.state.state = AppStates.PLAYING;\n          break;\n\n        case ActionType.PLAY_REVERSE:\n          this.player.reverse();\n          this.state.state = AppStates.PLAYING;\n          break;\n\n        default:\n          throw new Error('No case for action ' + action.action);\n      }\n    }\n  }]);\n\n  return AppController;\n}();",{"version":3,"sources":["/home/holwech/code/draw/src/draw/AppController.ts"],"names":[],"mappings":"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","sourcesContent":["import { IEvent, EventType, IStrokeProps } from './utils/boardInterfaces';\nimport { BoardController } from './board/BoardController';\nimport { PlayController } from './player/PlayController';\nimport { RecordController } from './recorder/RecordController';\nimport { EventController } from './event/EventController';\nimport { IAction, ActionType, AppStates } from './utils/appInterfaces';\nimport AppState from './AppState';\n\nexport class AppController {\n  public state: AppState;\n  private board: BoardController;\n  private player: PlayController;\n  private recorder: RecordController;\n  private event: EventController;\n  private svg: HTMLElement & SVGElement & SVGSVGElement;\n\n  constructor(svgID: string, strokeProps: IStrokeProps) {\n    this.state = new AppState();\n    this.svg = document.getElementById(svgID) as any as HTMLElement & SVGElement & SVGSVGElement;\n    if (!this.svg.getScreenCTM()) {\n      throw new Error('getScreenCTM is not defined');\n    }\n    let viewBox = { x: 0, y: 0, width: 1200, height: 800 };\n    const viewboxElem = this.svg.getAttributeNS(null, 'viewBox');\n    if (viewboxElem !== null) {\n      const arr = viewboxElem.split(' ').map(Number);\n      viewBox = { x: arr[0], y: arr[1], width: arr[2], height: arr[3] };\n    } else {\n      throw new Error('The SVG element requires the view box attribute to be set.');\n    }\n\n    const initialState = [\n      { eventType: EventType.SET_STROKE_PROPS, strokeProps },\n      { eventType: EventType.SET_VIEWBOX, viewBox },\n    ];\n    this.board = new BoardController(this.svg, this, initialState);\n    this.recorder = new RecordController(this, initialState);\n    this.player = new PlayController(this, this.state.playState);\n    this.event = new EventController(this.svg, this);\n  }\n\n  public dispatchEvent(event: IEvent): void {\n    console.log('EVENT: ' + event.eventType);\n    switch (this.state.state) {\n      case AppStates.UINIT:\n        console.log('App uninitialized');\n        break;\n      case AppStates.RECORDING:\n        event.time = this.state.timer.getTime();\n        this.board.execute(event);\n        this.recorder.record(event);\n        break;\n      case AppStates.PLAYING:\n        this.board.execute(event);\n        break;\n      default:\n        throw new Error('No case for appState ' + this.state.state);\n    }\n  }\n\n  public dispatchAction(action: IAction): void {\n    console.log('ACTION: ' + action.action);\n    switch (action.action) {\n      case ActionType.RECORD_START:\n        this.state.state = AppStates.RECORDING;\n        this.state.timer.start();\n        this.event.executeAction(action);\n        break;\n      case ActionType.RECORD_STOP:\n        this.state.state = AppStates.RECORDING;\n        this.state.timer.stop();\n        this.event.executeAction(action);\n        break;\n      case ActionType.RECORD_PAUSE:\n        this.state.state = AppStates.RECORDING;\n        this.state.timer.pause();\n        this.event.executeAction(action);\n        break;\n      case ActionType.PLAY_START:\n        if (\n          this.state.state === AppStates.RECORDING ||\n          this.state.state === AppStates.UINIT\n        ) {\n          this.player.setEventLog(this.recorder.getEventLog());\n        }\n        this.state.state = AppStates.PLAYING;\n        this.player.play();\n        break;\n      case ActionType.PLAY_STOP:\n        this.player.stop();\n        this.state.state = AppStates.PLAYING;\n        break;\n      case ActionType.PLAY_PAUSE:\n        this.player.pause();\n        this.state.state = AppStates.PLAYING;\n        break;\n      case ActionType.PLAY_REVERSE:\n        this.player.reverse();\n        this.state.state = AppStates.PLAYING;\n        break;\n      default:\n        throw new Error('No case for action ' + action.action);\n    }\n  }\n}\n"],"sourceRoot":""}]}