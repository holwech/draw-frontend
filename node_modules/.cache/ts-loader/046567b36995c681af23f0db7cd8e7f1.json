{"remainingRequest":"/home/holwech/code/draw/example/draw/node_modules/babel-loader/lib/index.js!/home/holwech/code/draw/example/draw/node_modules/ts-loader/index.js??ref--13-2!/home/holwech/code/draw/example/draw/src/draw/Controller.ts","dependencies":[{"path":"/home/holwech/code/draw/example/draw/src/draw/Controller.ts","mtime":1548272197070},{"path":"/home/holwech/code/draw/example/draw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/holwech/code/draw/example/draw/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/holwech/code/draw/example/draw/node_modules/ts-loader/index.js","mtime":1540965372000}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/holwech/code/draw/example/draw/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/holwech/code/draw/example/draw/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SVGDraw } from './SVGDraw';\nexport var Controller =\n/*#__PURE__*/\nfunction () {\n  function Controller(svgID) {\n    _classCallCheck(this, Controller);\n\n    this.draw = new SVGDraw(svgID);\n    this.svg = document.getElementById(svgID);\n    this.draw.toggleDrawEventListners(true);\n  }\n\n  _createClass(Controller, [{\n    key: \"togglePanMode\",\n    value: function togglePanMode(toggle) {\n      if (toggle) {\n        this.draw.toggleDrawEventListners(false);\n      } else {\n        this.draw.toggleDrawEventListners(true);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.draw.clear();\n    }\n  }, {\n    key: \"setStrokeProperties\",\n    value: function setStrokeProperties(color, smoothness, width) {\n      this.draw.setStrokeProperties(color, smoothness, width);\n    }\n  }, {\n    key: \"togglePanEventListeners\",\n    value: function togglePanEventListeners(toggle) {\n      if (toggle) {// svg.addEventListener('mousedown', onPointerDown); // Pressing the mouse\n        // svg.addEventListener('mouseup', onPointerUp); // Releasing the mouse\n        // svg.addEventListener('mouseleave', onPointerUp); // Mouse gets out of the SVG area\n        // svg.addEventListener('mousemove', onPointerMove); // Mouse is moving\n        // // Add all touch events listeners fallback\n        // svg.addEventListener('touchstart', onPointerDown); // Finger is touching the screen\n        // svg.addEventListener('touchend', onPointerUp); // Finger is no longer touching the screen\n        // svg.addEventListener('touchmove', onPointerMove); // Finger is moving\n      }\n    }\n  }]);\n\n  return Controller;\n}();",{"version":3,"sources":["/home/holwech/code/draw/example/draw/src/draw/Controller.ts"],"names":[],"mappings":";;AAAA,SAAS,OAAT,QAAwB,WAAxB;AAEA,WAAa,UAAb;AAAA;AAAA;AAIE,sBAAY,KAAZ,EAAyB;AAAA;;AACvB,SAAK,IAAL,GAAY,IAAI,OAAJ,CAAY,KAAZ,CAAZ;AACA,SAAK,GAAL,GAAW,QAAQ,CAAC,cAAT,CAAwB,KAAxB,CAAX;AACA,SAAK,IAAL,CAAU,uBAAV,CAAkC,IAAlC;AACD;;AARH;AAAA;AAAA,kCAUuB,MAVvB,EAUsC;AAClC,UAAI,MAAJ,EAAY;AACV,aAAK,IAAL,CAAU,uBAAV,CAAkC,KAAlC;AACD,OAFD,MAEO;AACL,aAAK,IAAL,CAAU,uBAAV,CAAkC,IAAlC;AACD;AACF;AAhBH;AAAA;AAAA,4BAkBc;AACV,WAAK,IAAL,CAAU,KAAV;AACD;AApBH;AAAA;AAAA,wCAsB6B,KAtB7B,EAsB4C,UAtB5C,EAsBgE,KAtBhE,EAsB6E;AACzE,WAAK,IAAL,CAAU,mBAAV,CAA8B,KAA9B,EAAqC,UAArC,EAAiD,KAAjD;AACD;AAxBH;AAAA;AAAA,4CA0BkC,MA1BlC,EA0BiD;AAC7C,UAAI,MAAJ,EAAY,CACV;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD;AACF;AAtCH;;AAAA;AAAA","sourcesContent":["import { SVGDraw } from './SVGDraw';\n\nexport class Controller {\n  private svg: HTMLElement;\n  private draw: SVGDraw;\n\n  constructor(svgID: string) {\n    this.draw = new SVGDraw(svgID);\n    this.svg = document.getElementById(svgID) as HTMLElement;\n    this.draw.toggleDrawEventListners(true);\n  }\n\n  public togglePanMode(toggle: boolean) {\n    if (toggle) {\n      this.draw.toggleDrawEventListners(false);\n    } else {\n      this.draw.toggleDrawEventListners(true);\n    }\n  }\n\n  public clear() {\n    this.draw.clear();\n  }\n\n  public setStrokeProperties(color: string, smoothness: string, width: string) {\n    this.draw.setStrokeProperties(color, smoothness, width);\n  }\n\n  private togglePanEventListeners(toggle: boolean) {\n    if (toggle) {\n      // svg.addEventListener('mousedown', onPointerDown); // Pressing the mouse\n      // svg.addEventListener('mouseup', onPointerUp); // Releasing the mouse\n      // svg.addEventListener('mouseleave', onPointerUp); // Mouse gets out of the SVG area\n      // svg.addEventListener('mousemove', onPointerMove); // Mouse is moving\n\n      // // Add all touch events listeners fallback\n      // svg.addEventListener('touchstart', onPointerDown); // Finger is touching the screen\n      // svg.addEventListener('touchend', onPointerUp); // Finger is no longer touching the screen\n      // svg.addEventListener('touchmove', onPointerMove); // Finger is moving\n    }\n  }\n\n}\n"],"sourceRoot":""}]}