{"remainingRequest":"/home/holwech/code/draw/node_modules/babel-loader/lib/index.js!/home/holwech/code/draw/node_modules/ts-loader/index.js??ref--13-2!/home/holwech/code/draw/src/draw/utils/Timer.ts","dependencies":[{"path":"/home/holwech/code/draw/src/draw/utils/Timer.ts","mtime":1553881647950},{"path":"/home/holwech/code/draw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/ts-loader/index.js","mtime":1540965372000}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/holwech/code/draw/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/holwech/code/draw/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar TimerStates;\n\n(function (TimerStates) {\n  TimerStates[TimerStates[\"UINIT\"] = 0] = \"UINIT\";\n  TimerStates[TimerStates[\"STARTED\"] = 1] = \"STARTED\";\n  TimerStates[TimerStates[\"PAUSED\"] = 2] = \"PAUSED\";\n  TimerStates[TimerStates[\"STOPPED\"] = 3] = \"STOPPED\";\n  TimerStates[TimerStates[\"REVERSE\"] = 4] = \"REVERSE\";\n})(TimerStates || (TimerStates = {}));\n\nvar Timer =\n/*#__PURE__*/\nfunction () {\n  function Timer() {\n    _classCallCheck(this, Timer);\n\n    this.startTime = 0;\n    this.stopTime = 0;\n    this.pauseTime = 0;\n    this.reverseTime = 0;\n    this.state = TimerStates.UINIT;\n  }\n\n  _createClass(Timer, [{\n    key: \"getTime\",\n    value: function getTime() {\n      switch (this.state) {\n        case TimerStates.UINIT:\n          return 0;\n\n        case TimerStates.STARTED:\n          return new Date().getTime() - this.startTime;\n\n        case TimerStates.PAUSED:\n          return this.pauseTime - this.startTime;\n\n        case TimerStates.STOPPED:\n          return this.stopTime - this.startTime;\n\n        case TimerStates.REVERSE:\n          var time = this.reverseTime - this.startTime - new Date().getTime();\n\n          if (time < 0) {\n            return 0;\n          } else {\n            return time;\n          }\n\n      }\n    }\n  }, {\n    key: \"getStopTime\",\n    value: function getStopTime() {\n      if (this.state !== TimerStates.STOPPED) {\n        return 0;\n      }\n\n      return this.stopTime;\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.state;\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.startTime = new Date().getTime();\n      this.stopTime = this.startTime;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      switch (this.state) {\n        case TimerStates.UINIT:\n          this.startTime = new Date().getTime();\n          break;\n\n        case TimerStates.PAUSED:\n          this.startTime += new Date().getTime() - this.pauseTime;\n          break;\n\n        case TimerStates.STOPPED:\n          this.startTime = new Date().getTime();\n          this.stopTime = this.startTime;\n          this.pauseTime = this.startTime;\n          break;\n\n        case TimerStates.REVERSE:\n          this.startTime = new Date().getTime() - this.getTime();\n          break;\n\n        default:\n          break;\n      }\n\n      this.state = TimerStates.STARTED;\n      console.log('State is ' + this.state);\n    }\n  }, {\n    key: \"reverse\",\n    value: function reverse() {\n      switch (this.state) {\n        case TimerStates.UINIT:\n          this.reverseTime = this.startTime;\n          break;\n\n        case TimerStates.STARTED:\n          this.reverseTime = new Date().getTime();\n          break;\n\n        case TimerStates.PAUSED:\n          this.reverseTime = this.pauseTime;\n          break;\n\n        case TimerStates.STOPPED:\n          throw new Error('Cannot run reverse on a stopped timer');\n\n        default:\n          break;\n      }\n\n      this.state = TimerStates.REVERSE;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      switch (this.state) {\n        case TimerStates.UINIT:\n          break;\n\n        case TimerStates.STARTED:\n          this.pauseTime = new Date().getTime();\n          break;\n\n        case TimerStates.STOPPED:\n          break;\n\n        case TimerStates.REVERSE:\n          var currentTime = new Date().getTime();\n          this.startTime = currentTime - this.getTime();\n          this.pauseTime = currentTime;\n          break;\n\n        default:\n          break;\n      }\n\n      this.state = TimerStates.PAUSED;\n      console.log('State is ' + this.state);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      switch (this.state) {\n        case TimerStates.UINIT:\n          return;\n\n        case TimerStates.STARTED:\n          this.stopTime = new Date().getTime();\n          break;\n\n        case TimerStates.PAUSED:\n          this.stopTime = this.pauseTime;\n          break;\n\n        default:\n          break;\n      }\n\n      this.state = TimerStates.STOPPED;\n      console.log('State is ' + this.state);\n    }\n  }, {\n    key: \"bindTimeMonitor\",\n    value: function bindTimeMonitor(timeObj) {\n      var _this = this;\n\n      this.timeMonitorInterval = setInterval(function () {\n        console.log(_this.state);\n\n        var currentTime = _this.getTime();\n\n        timeObj.minutes = Math.floor(currentTime % (1000 * 60 * 60) / (1000 * 60));\n        timeObj.seconds = Math.floor(currentTime % (1000 * 60) / 1000);\n        console.log(timeObj.seconds);\n      }, 1000);\n    }\n  }]);\n\n  return Timer;\n}();\n\nexport { Timer as default };",{"version":3,"sources":["/home/holwech/code/draw/src/draw/utils/Timer.ts"],"names":[],"mappings":"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","sourcesContent":["enum TimerStates {\n  UINIT,\n  STARTED,\n  PAUSED,\n  STOPPED,\n  REVERSE,\n}\n\ninterface ITimeMonitor {\n  minutes: number;\n  seconds: number;\n}\n\nexport default class Timer {\n  private startTime = 0;\n  private stopTime = 0;\n  private pauseTime = 0;\n  private reverseTime = 0;\n  private state: TimerStates = TimerStates.UINIT;\n  private timeMonitorInterval!: number;\n\n  public getTime(): number {\n    switch (this.state) {\n      case TimerStates.UINIT:\n        return 0;\n      case TimerStates.STARTED:\n        return new Date().getTime() - this.startTime;\n      case TimerStates.PAUSED:\n        return this.pauseTime - this.startTime;\n      case TimerStates.STOPPED:\n        return this.stopTime - this.startTime;\n      case TimerStates.REVERSE:\n        const time = this.reverseTime - this.startTime - new Date().getTime();\n        if (time < 0) {\n          return 0;\n        } else {\n          return time;\n        }\n    }\n  }\n\n  public getStopTime(): number {\n    if (this.state !== TimerStates.STOPPED) {\n      return 0;\n    }\n    return this.stopTime;\n  }\n\n  public getState(): TimerStates {\n    return this.state;\n  }\n\n  public restart(): void {\n    this.startTime = new Date().getTime();\n    this.stopTime = this.startTime;\n  }\n\n  public start(): void {\n    switch (this.state) {\n      case TimerStates.UINIT:\n        this.startTime = new Date().getTime();\n        break;\n      case TimerStates.PAUSED:\n        this.startTime += new Date().getTime() - this.pauseTime;\n        break;\n      case TimerStates.STOPPED:\n        this.startTime = new Date().getTime();\n        this.stopTime = this.startTime;\n        this.pauseTime = this.startTime;\n        break;\n      case TimerStates.REVERSE:\n        this.startTime = new Date().getTime() - this.getTime();\n        break;\n      default:\n        break;\n    }\n    this.state = TimerStates.STARTED;\n    console.log('State is ' + this.state);\n  }\n\n  public reverse(): void {\n    switch (this.state) {\n      case TimerStates.UINIT:\n        this.reverseTime = this.startTime;\n        break;\n      case TimerStates.STARTED:\n        this.reverseTime = new Date().getTime();\n        break;\n      case TimerStates.PAUSED:\n        this.reverseTime = this.pauseTime;\n        break;\n      case TimerStates.STOPPED:\n        throw new Error('Cannot run reverse on a stopped timer');\n      default:\n        break;\n    }\n    this.state = TimerStates.REVERSE;\n  }\n\n  public pause(): void {\n    switch (this.state) {\n      case TimerStates.UINIT:\n        break;\n      case TimerStates.STARTED:\n        this.pauseTime = new Date().getTime();\n        break;\n      case TimerStates.STOPPED:\n        break;\n      case TimerStates.REVERSE:\n        const currentTime = new Date().getTime();\n        this.startTime = currentTime - this.getTime();\n        this.pauseTime = currentTime;\n        break;\n      default:\n        break;\n    }\n    this.state = TimerStates.PAUSED;\n    console.log('State is ' + this.state);\n  }\n\n  public stop(): void {\n    switch (this.state) {\n      case TimerStates.UINIT:\n        return;\n      case TimerStates.STARTED:\n        this.stopTime = new Date().getTime();\n        break;\n      case TimerStates.PAUSED:\n        this.stopTime = this.pauseTime;\n        break;\n      default:\n        break;\n    }\n    this.state = TimerStates.STOPPED;\n    console.log('State is ' + this.state);\n  }\n\n  public bindTimeMonitor(timeObj: ITimeMonitor): void {\n    this.timeMonitorInterval = setInterval(() => {\n      console.log(this.state);\n      const currentTime = this.getTime();\n      timeObj.minutes = Math.floor((currentTime % (1000 * 60 * 60)) / (1000 * 60));\n      timeObj.seconds = Math.floor((currentTime % (1000 * 60)) / 1000);\n      console.log(timeObj.seconds);\n    }, 1000);\n  }\n}\n"],"sourceRoot":""}]}