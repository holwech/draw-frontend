{"remainingRequest":"/home/holwech/code/draw/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/holwech/code/draw/src/components/Main.vue?vue&type=style&index=0&id=54d3a52e&scoped=true&lang=css&","dependencies":[{"path":"/home/holwech/code/draw/src/components/Main.vue","mtime":1553630556133},{"path":"/home/holwech/code/draw/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/holwech/code/draw/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n#svgElement {\n  border: 1px solid black;\n}\n\n",{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-app id=\"inspire\">\n      <v-navigation-drawer\n        fixed\n        v-model=\"drawer\"\n        app\n        >\n        <v-list dense>\n          <v-list-tile @click=\"\">\n          <v-list-tile-action>\n            <v-icon>home</v-icon>\n          </v-list-tile-action>\n          <v-list-tile-content>\n            <v-list-tile-title>Home</v-list-tile-title>\n          </v-list-tile-content>\n          </v-list-tile>\n          <v-list-tile @click=\"\">\n          <v-list-tile-action>\n            <v-icon>contact_mail</v-icon>\n          </v-list-tile-action>\n          <v-list-tile-content>\n            <v-list-tile-title>Contact</v-list-tile-title>\n          </v-list-tile-content>\n          </v-list-tile>\n        </v-list>\n        </v-navigation-drawer>\n        <v-toolbar color=\"indigo\" dark fixed app>\n          <v-toolbar-side-icon @click.stop=\"drawer = !drawer\"></v-toolbar-side-icon>\n          <v-toolbar-title>Application</v-toolbar-title>\n            {{ timeObj.minutes + \":\" + timeObj.seconds }}\n            <v-spacer></v-spacer>\n            <v-btn flat small>Pan {{ this.panMode }} (Hold CTRL)</v-btn>\n            <v-btn small @click=\"clear\">Clear</v-btn>\n            <v-btn color=\"success\" @click=\"controller.startRecording()\">Start recording</v-btn>\n            <v-btn @click=\"controller.stopRecording()\">Stop recording</v-btn>\n            <!-- <v-btn @click=\"controller.printLog()\"> Print log </v-btn> -->\n            <v-btn color=\"success\" @click=\"controller.startPlayer()\"> Play </v-btn>\n            <v-btn color=\"success\" @click=\"controller.reversePlayer()\"> Reverse </v-btn>\n            <v-btn @click=\"controller.pausePlayer()\"> Pause </v-btn>\n            <v-toolbar-items class=\"hidden-sm-and-down\">\n              <v-select\n                item-text=\"text\"\n                item-value=\"value\"\n                :items=\"selectSmoothnessItems\"\n                @input=\"setStrokeProperties\"\n                v-model=\"smoothness\"\n                label=\"Smoothness\"\n                return-object\n                color='black'\n              ></v-select>\n            </v-toolbar-items>\n            <v-toolbar-items class=\"hidden-sm-and-down\">\n              <v-select\n                item-text=\"text\"\n                item-value=\"value\"\n                :items=\"selectColorItems\"\n                @input=\"setStrokeProperties\"\n                v-model=\"color\"\n                label=\"Color\"\n                return-object\n                color='black'\n              ></v-select>\n            </v-toolbar-items>\n            <v-toolbar-items class=\"hidden-sm-and-down\">\n              <v-select\n                item-text=\"text\"\n                item-value=\"value\"\n                :items=\"selectWidthItems\"\n                @input=\"setStrokeProperties\"\n                v-model=\"width\"\n                label=\"Color\"\n                return-object\n                color='black'\n              ></v-select>\n            </v-toolbar-items>\n          </v-toolbar>\n        <v-content ma-0 pa-0 style=\"padding: 0px\">\n            <v-container\n              fluid\n              grid-list-lg\n            >\n              <v-layout\n                row\n                wrap\n              >\n                <v-flex xs12>\n                  <v-slider\n                    v-model=\"slider\"\n                  ></v-slider>\n                </v-flex>\n              </v-layout>\n            </v-container>\n          <v-container fluid fill-height ma-0 pa-0>\n            <v-layout\n            justify-center\n            align-center\n            row wrap\n            >\n            <v-flex text-xs-center>\n              <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                  version=\"1.1\"\n                  id=\"svgElement\"\n                  viewBox=\"0 0 1200 800\"\n                  enable-background=\"new 0 0 1200 800\"\n                  xml:space=\"preserve\"\n              >\n              </svg>\n            </v-flex>\n          </v-layout>\n        </v-container>\n      </v-content>\n      <v-footer color=\"indigo\" app inset>\n        <span class=\"white--text\">&copy; 2017</span>\n      </v-footer>\n    </v-app>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\nimport { BoardState, IStrokeProps } from '../draw/utils/boardInterfaces';\nimport { Controller } from '../draw/InterfaceController';\n\n@Component\nexport default class Main extends Vue {\n  private drawer = false;\n  private controller!: Controller;\n  private dialog = false;\n  private msg: string = 'Drawing board';\n  private smoothness = { text: '4 - Sharp curves', value: 4};\n  private slider = 0;\n  private color = { text: 'Black', value: 'black'};\n  private width = { text: '1px', value: 1};\n  private panMode: string = 'off';\n  private timeObj = { minutes: 0, seconds: 0};\n  private selectSmoothnessItems = [\n    { text: '1 - No smoothing', value: 1 },\n    { text: '4 - Sharp curves', value: 4 },\n    { text: '20 - Hyper smooth curves', value: 20 },\n  ];\n  private selectColorItems = [\n    { text: 'Black', value: 'black' },\n    { text: 'Blue', value: 'blue' },\n    { text: 'Red', value: 'red' },\n    { text: 'Green', value: 'green' },\n  ];\n  private selectWidthItems = [\n    { text: '1px', value: 1 },\n    { text: '2px', value: 2 },\n    { text: '4px', value: 4 },\n    { text: '8px', value: 8 },\n  ];\n\n  private panOn(e: KeyboardEvent): void {\n    if (e.keyCode === 17) {\n      this.panMode = 'on';\n      this.controller.setState(BoardState.PAN);\n    }\n  }\n\n  private panOff(e: KeyboardEvent): void {\n    if (e.keyCode === 17) {\n      this.panMode = 'off';\n      this.controller.setState(BoardState.DRAW);\n    }\n  }\n\n  private mounted(): void {\n    this.controller = new Controller('svgElement', {\n      color: this.color.value,\n      width: this.width.value,\n      bufferSize: this.smoothness.value,\n    });\n    this.controller.app.state.timer.bindTimeMonitor(this.timeObj);\n    window.addEventListener('keydown', this.panOn);\n    window.addEventListener('keyup', this.panOff);\n  }\n\n  private clear(): void {\n    this.controller.clear();\n  }\n\n  private setStrokeProperties(): void {\n    console.log(this.smoothness.value, this.color.value, this.width.value);\n    this.controller.setStrokeProperties({\n      color: this.color.value,\n      width: this.width.value,\n      bufferSize: this.smoothness.value,\n    });\n  }\n}\n</script>\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n#svgElement {\n  border: 1px solid black;\n}\n\n</style>"]}]}